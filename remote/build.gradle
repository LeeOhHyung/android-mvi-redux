apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        buildConfigField("String", "BASE_URL_UNSPLASH", getBaseUrl("BASE_URL_UNSPLASH"))
        buildConfigField("String", "BASE_URL_OPEN_WEATHER_MAP", getBaseUrl("BASE_URL_OPEN_WEATHER_MAP"))
        buildConfigField("String", "BASE_URL_NAVER_MAP", getBaseUrl("BASE_URL_NAVER_MAP"))
        buildConfigField("String", "API_KEY_UNSPLASH", getApiKey("API_KEY_UNSPLASH"))
        buildConfigField("String", "API_KEY_OPEN_WEATHER_MAP", getApiKey("API_KEY_OPEN_WEATHER_MAP"))
        buildConfigField("String", "API_KEY_NAVER_MAP_CLIENT_ID", getApiKey("API_KEY_NAVER_MAP_CLIENT_ID"))
        buildConfigField("String", "API_KEY_NAVER_MAP_CLIENT_SECRET", getApiKey("API_KEY_NAVER_MAP_CLIENT_SECRET"))
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation project(':data')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Retrofit, OkHttp, MockWebServer, Moshi
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.2'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.28.3-alpha'
    implementation 'androidx.hilt:hilt-common:1.0.0-alpha02'
    kapt 'com.google.dagger:hilt-android-compiler:2.28.3-alpha'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // Testing
    testImplementation 'com.google.guava:guava:29.0-android'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
}

String getBaseUrl(String name) {
    try {
        def properties = new Properties()
        properties.load(new FileInputStream(rootProject.file("./local.properties")))
        def baseUrl = properties.getProperty(name)
        if(baseUrl != null) baseUrl else "\"https://fake.api.com\""
    } catch(FileNotFoundException e) {
        e.printStackTrace()
        "\"https://fake.api.com\""
    }
}

String getApiKey(String name) {
    try {
        def properties = new Properties()
        properties.load(new FileInputStream(rootProject.file("./local.properties")))
        def apiKey = properties.getProperty(name)
        if(apiKey != null) apiKey else "\"fakeApiKey\""
    } catch(FileNotFoundException e) {
        e.printStackTrace()
        "\"fakeApiKey\""
    }
}
